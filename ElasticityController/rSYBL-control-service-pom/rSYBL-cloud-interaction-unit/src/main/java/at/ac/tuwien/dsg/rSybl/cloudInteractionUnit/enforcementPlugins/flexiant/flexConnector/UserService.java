
package at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "UserService", targetNamespace = "http://extility.flexiant.net")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserService {


    /**
     * <p>This function will create a new empty group.</p><p>The group cannot be created pre-populated with users; use addUserToGroup to add the users after creation.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param skeletonGroup
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "createGroup", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateGroup")
    @ResponseWrapper(localName = "createGroupResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateGroupResponse")
    public Job createGroup(
        @WebParam(name = "skeletonGroup", targetNamespace = "")
        Group skeletonGroup,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will fetch a resource (such as a disk, image or server) over the internet, using the parameters supplied.</p><p>If the boolean parameter makeImage is set to true, then the call will create an image, else it will create a disk or a server, dependent upon the resource fetched and what the cluster supports.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param fetchParameters
     * @param referenceSize
     * @param skeletonResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "fetchResource", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.FetchResource")
    @ResponseWrapper(localName = "fetchResourceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.FetchResourceResponse")
    public Job fetchResource(
        @WebParam(name = "skeletonResource", targetNamespace = "")
        VirtualResource skeletonResource,
        @WebParam(name = "fetchParameters", targetNamespace = "")
        FetchParameters fetchParameters,
        @WebParam(name = "referenceSize", targetNamespace = "")
        Long referenceSize,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will fetch a server over the internet, using the parameters supplied.</p><p>If the boolean parameter makeImage is set to true, then the call will create an image, else it will create a server, dependent upon the resource fetched and what the cluster supports.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param fetchParameters
     * @param skeletonServer
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "fetchServer", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.FetchServer")
    @ResponseWrapper(localName = "fetchServerResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.FetchServerResponse")
    public Job fetchServer(
        @WebParam(name = "skeletonServer", targetNamespace = "")
        Server skeletonServer,
        @WebParam(name = "fetchParameters", targetNamespace = "")
        FetchParameters fetchParameters,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will fetch a disk over the internet, using the parameters supplied.</p><p>If the boolean parameter makeImage is set to true, then the call will create an image, else it will create a disk dependent upon the resource fetched and what the cluster supports.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param skeletonDisk
     * @param fetchParameters
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "fetchDisk", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.FetchDisk")
    @ResponseWrapper(localName = "fetchDiskResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.FetchDiskResponse")
    public Job fetchDisk(
        @WebParam(name = "skeletonDisk", targetNamespace = "")
        Disk skeletonDisk,
        @WebParam(name = "fetchParameters", targetNamespace = "")
        FetchParameters fetchParameters,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify an existing resource object.</p><p>A new object is passed in which forms the basis of the modified object. The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyResource", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyResource")
    @ResponseWrapper(localName = "modifyResourceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyResourceResponse")
    public Job modifyResource(
        @WebParam(name = "updatedResource", targetNamespace = "")
        VirtualResource updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will delete an existing resource object.</p><p>If cascade is set to true, a 'deep delete' is performed, and each of dependent child resource will be deleted. If cascade is false, an exception will be thrown if there are child objects.</p><p>Note that jobs are deleted synchronously; deleting a job does not create another job.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not deleted.</p>
     * 
     * @param cascade
     * @param when
     * @param resourceUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "deleteResource", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeleteResource")
    @ResponseWrapper(localName = "deleteResourceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeleteResourceResponse")
    public Job deleteResource(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "cascade", targetNamespace = "")
        boolean cascade,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will add keys to the given resource object.</p><p>On successful execution, the resource object will be returned with the added key in it. On an exception, the key will not be added.</p>
     * 
     * @param resourceKey
     * @param resourceUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Resource
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "resource", targetNamespace = "")
    @RequestWrapper(localName = "addKey", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AddKey")
    @ResponseWrapper(localName = "addKeyResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AddKeyResponse")
    public Resource addKey(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "resourceKey", targetNamespace = "")
        ResourceKey resourceKey)
        throws ExtilityException
    ;

    /**
     * <p>This function will remove keys from the given resource object.</p><p>On successful execution, the resource object is returned with the given key removed. On an exception, the key will not be removed from Resource.</p>
     * 
     * @param resourceKey
     * @param resourceUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Resource
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "resource", targetNamespace = "")
    @RequestWrapper(localName = "removeKey", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RemoveKey")
    @ResponseWrapper(localName = "removeKeyResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RemoveKeyResponse")
    public Resource removeKey(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "resourceKey", targetNamespace = "")
        ResourceKey resourceKey)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify an existing resource key for a given resource object.</p><p>On successful execution, the resource object will be returned with the modified key object. On an exception, the key will not be modified</p>
     * 
     * @param resourceKey
     * @param resourceUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.VirtualResource
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "resource", targetNamespace = "")
    @RequestWrapper(localName = "modifyKey", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyKey")
    @ResponseWrapper(localName = "modifyKeyResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyKeyResponse")
    public VirtualResource modifyKey(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "resourceKey", targetNamespace = "")
        ResourceKey resourceKey)
        throws ExtilityException
    ;

    /**
     * <p>This function will revert all the changes of a resource object, back to its template.</p><p>For instance, this call can be used to revert a server or a disk back to its original snapshot.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not reverted.</p>
     * 
     * @param newSnapshotName
     * @param when
     * @param resourceUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "revertToResource", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RevertToResource")
    @ResponseWrapper(localName = "revertToResourceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RevertToResourceResponse")
    public Job revertToResource(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "newSnapshotName", targetNamespace = "")
        String newSnapshotName,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a server using the supplied skeleton object.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param sshKeyUUIDList
     * @param skeletonServer
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createServer", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateServer")
    @ResponseWrapper(localName = "createServerResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateServerResponse")
    public Job createServer(
        @WebParam(name = "skeletonServer", targetNamespace = "")
        Server skeletonServer,
        @WebParam(name = "sshKeyUUIDList", targetNamespace = "")
        List<String> sshKeyUUIDList,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify an existing server object.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyServer", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyServer")
    @ResponseWrapper(localName = "modifyServerResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyServerResponse")
    public Job modifyServer(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Server updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will attach a disk to an existing server.</p><p>The server must not be running when the call is made.</p><p>The index parameter is an integer specifying the position in the list of disks that the disk in question should take,  When index is 0 disk is added to the first position, only if no disks are attached to the given server, otherwise is added in the last position. Other disks will be shuffled around appropriately.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not attached.</p>
     * 
     * @param serverUUID
     * @param diskUUID
     * @param index
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "attachDisk", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachDisk")
    @ResponseWrapper(localName = "attachDiskResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachDiskResponse")
    public Job attachDisk(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "diskUUID", targetNamespace = "")
        String diskUUID,
        @WebParam(name = "index", targetNamespace = "")
        int index,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will detach a disk from an existing server.</p><p>The server must not be running when the call is made.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not detached.</p>
     * 
     * @param serverUUID
     * @param diskUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "detachDisk", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DetachDisk")
    @ResponseWrapper(localName = "detachDiskResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DetachDiskResponse")
    public Job detachDisk(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "diskUUID", targetNamespace = "")
        String diskUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will attach a network interface to a given server.</p><p>The server must not be running when the call is made.</p><p>The index parameter is an integer specifying the position in the list of network interfaces that the network interface in question should take. When index is 0 network interface is added to the first position, only if no network interfaces are attached to the given server, otherwise is added in the last position. Other network interfaces will be shuffled around appropriately.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param serverUUID
     * @param index
     * @param networkInterfaceUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "attachNetworkInterface", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachNetworkInterface")
    @ResponseWrapper(localName = "attachNetworkInterfaceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachNetworkInterfaceResponse")
    public Job attachNetworkInterface(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "networkInterfaceUUID", targetNamespace = "")
        String networkInterfaceUUID,
        @WebParam(name = "index", targetNamespace = "")
        int index,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will detach a network interface from a given server.</p><p>The server must not be running when the call is made.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not detached.</p>
     * 
     * @param serverUUID
     * @param nicUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "detachNetworkInterface", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DetachNetworkInterface")
    @ResponseWrapper(localName = "detachNetworkInterfaceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DetachNetworkInterfaceResponse")
    public Job detachNetworkInterface(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "nicUUID", targetNamespace = "")
        String nicUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will attach an SSH key to a given server.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not attached.</p>
     * 
     * @param sshKeyUUID
     * @param serverUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "attachSSHKey", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachSSHKey")
    @ResponseWrapper(localName = "attachSSHKeyResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachSSHKeyResponse")
    public Job attachSSHKey(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "SSHKeyUUID", targetNamespace = "")
        String sshKeyUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will detach an SSH key to a given server.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not detached.</p>
     * 
     * @param sshKeyUUID
     * @param serverUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "detachSSHKey", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DetachSSHKey")
    @ResponseWrapper(localName = "detachSSHKeyResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DetachSSHKeyResponse")
    public Job detachSSHKey(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "SSHKeyUUID", targetNamespace = "")
        String sshKeyUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will change the state of (start, stop, kill or reboot) a server.</p><p>The 'safe' parameter when set will ensure that a clean shutdown is always performed.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param serverUUID
     * @param newStatus
     * @param safe
     * @param when
     * @param runtimeMetadata
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "changeServerStatus", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ChangeServerStatus")
    @ResponseWrapper(localName = "changeServerStatusResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ChangeServerStatusResponse")
    public Job changeServerStatus(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "newStatus", targetNamespace = "")
        ServerStatus newStatus,
        @WebParam(name = "safe", targetNamespace = "")
        boolean safe,
        @WebParam(name = "runtimeMetadata", targetNamespace = "")
        ResourceMetadata runtimeMetadata,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will open virtual network connection for a given server.</p><p>On successful execution, the VNC Connection object is returned, and a connection can be opened at any point in an interval configurable by the licensee.</p><p>On an exception, the connection will not be opened</p>
     * 
     * @param serverUUID
     * @param handlerType
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.VncConnection
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "vncConnection", targetNamespace = "")
    @RequestWrapper(localName = "openVNCConnection", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.OpenVNCConnection")
    @ResponseWrapper(localName = "openVNCConnectionResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.OpenVNCConnectionResponse")
    public VncConnection openVNCConnection(
        @WebParam(name = "serverUUID", targetNamespace = "")
        String serverUUID,
        @WebParam(name = "handlerType", targetNamespace = "")
        VncHandler handlerType)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a disk, and optionally attach it to a server.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created or attached.</p>
     * 
     * @param skeletonDisk
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createDisk", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateDisk")
    @ResponseWrapper(localName = "createDiskResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateDiskResponse")
    public Job createDisk(
        @WebParam(name = "skeletonDisk", targetNamespace = "")
        Disk skeletonDisk,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a disk object.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyDisk", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyDisk")
    @ResponseWrapper(localName = "modifyDiskResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyDiskResponse")
    public Job modifyDisk(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Disk updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a snapshot object from a disk or a server.</p><p>Whether a snapshot object can be created from a disk or a server will depend on the capabilities of the cluster containing the disk or the server concerned.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param when
     * @param skeletonSnapshot
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createSnapshot", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateSnapshot")
    @ResponseWrapper(localName = "createSnapshotResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateSnapshotResponse")
    public Job createSnapshot(
        @WebParam(name = "skeletonSnapshot", targetNamespace = "")
        Snapshot skeletonSnapshot,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify an existing snapshot.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifySnapshot", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifySnapshot")
    @ResponseWrapper(localName = "modifySnapshotResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifySnapshotResponse")
    public Job modifySnapshot(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Snapshot updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a network.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param skeletonNetwork
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createNetwork", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateNetwork")
    @ResponseWrapper(localName = "createNetworkResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateNetworkResponse")
    public Job createNetwork(
        @WebParam(name = "skeletonNetwork", targetNamespace = "")
        Network skeletonNetwork,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a network object.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyNetwork", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyNetwork")
    @ResponseWrapper(localName = "modifyNetworkResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyNetworkResponse")
    public Job modifyNetwork(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Network updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will attach a subnet an existing network.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not attached.</p>
     * 
     * @param subnetUUID
     * @param networkUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "attachSubnet", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachSubnet")
    @ResponseWrapper(localName = "attachSubnetResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AttachSubnetResponse")
    public Job attachSubnet(
        @WebParam(name = "networkUUID", targetNamespace = "")
        String networkUUID,
        @WebParam(name = "subnetUUID", targetNamespace = "")
        String subnetUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a subnet.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param skeletonSubnet
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createSubnet", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateSubnet")
    @ResponseWrapper(localName = "createSubnetResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateSubnetResponse")
    public Job createSubnet(
        @WebParam(name = "skeletonSubnet", targetNamespace = "")
        Subnet skeletonSubnet,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a subnet.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifySubnet", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifySubnet")
    @ResponseWrapper(localName = "modifySubnetResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifySubnetResponse")
    public Job modifySubnet(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Subnet updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a firewall template.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param skeletonFirewallTemplate
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createFirewallTemplate", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateFirewallTemplate")
    @ResponseWrapper(localName = "createFirewallTemplateResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateFirewallTemplateResponse")
    public Job createFirewallTemplate(
        @WebParam(name = "skeletonFirewallTemplate", targetNamespace = "")
        FirewallTemplate skeletonFirewallTemplate,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a firewall template</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyFirewallTemplate", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyFirewallTemplate")
    @ResponseWrapper(localName = "modifyFirewallTemplateResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyFirewallTemplateResponse")
    public Job modifyFirewallTemplate(
        @WebParam(name = "updatedResource", targetNamespace = "")
        FirewallTemplate updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will apply a firewall template to a given IP address.</p><p>IPv4 firewall templates can only be applied to IPv4 addresses, and IPv6 firewall templates can only be applied to IPv6 addresses.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the firewall template is not applied.</p>
     * 
     * @param firewallTemplateUUID
     * @param ipAddress
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "applyFirewallTemplate", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ApplyFirewallTemplate")
    @ResponseWrapper(localName = "applyFirewallTemplateResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ApplyFirewallTemplateResponse")
    public Job applyFirewallTemplate(
        @WebParam(name = "firewallTemplateUUID", targetNamespace = "")
        String firewallTemplateUUID,
        @WebParam(name = "ipAddress", targetNamespace = "")
        String ipAddress,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create an ssh key.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param skeletonSSHKey
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createSSHKey", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateSSHKey")
    @ResponseWrapper(localName = "createSSHKeyResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateSSHKeyResponse")
    public Job createSSHKey(
        @WebParam(name = "skeletonSSHKey", targetNamespace = "")
        SshKey skeletonSSHKey,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify an ssh key.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedSSHKey
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifySSHKey", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifySSHKey")
    @ResponseWrapper(localName = "modifySSHKeyResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifySSHKeyResponse")
    public Job modifySSHKey(
        @WebParam(name = "updatedSSHKey", targetNamespace = "")
        SshKey updatedSSHKey,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a network interface.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param when
     * @param skeletonNIC
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createNetworkInterface", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateNetworkInterface")
    @ResponseWrapper(localName = "createNetworkInterfaceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateNetworkInterfaceResponse")
    public Job createNetworkInterface(
        @WebParam(name = "skeletonNIC", targetNamespace = "")
        Nic skeletonNIC,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a group.</p><p>Note that this function is not intended for use to change the membership of a group.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyGroup", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyGroup")
    @ResponseWrapper(localName = "modifyGroupResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyGroupResponse")
    public Job modifyGroup(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Group updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a network interface.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyNetworkInterface", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyNetworkInterface")
    @ResponseWrapper(localName = "modifyNetworkInterfaceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyNetworkInterfaceResponse")
    public Job modifyNetworkInterface(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Nic updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a payment method instance.</p><p>This will only allow the default flag and the resource name to be modified.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyPaymentMethodInstance", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyPaymentMethodInstance")
    @ResponseWrapper(localName = "modifyPaymentMethodInstanceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyPaymentMethodInstanceResponse")
    public Job modifyPaymentMethodInstance(
        @WebParam(name = "updatedResource", targetNamespace = "")
        PaymentMethodInstance updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will add an IP address to a network interface.</p><p>Please note that you will only be able to have one IPv4 address set as 'auto' in a network interface. An automatic IPv6 address is set on the network interface at creation time and can not be altered.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param auto
     * @param ipAddress
     * @param networkInterfaceUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "addIP", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AddIP")
    @ResponseWrapper(localName = "addIPResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AddIPResponse")
    public Job addIP(
        @WebParam(name = "networkInterfaceUUID", targetNamespace = "")
        String networkInterfaceUUID,
        @WebParam(name = "ipAddress", targetNamespace = "")
        String ipAddress,
        @WebParam(name = "auto", targetNamespace = "")
        boolean auto,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will remove an IP address from a network interface.</p><p>Note that you can only remove IPv4 addresses from network interfaces; IPv6 addresses are permanently assigned.</p><p>Removing an IP address from the NIC will result in any firewall associated with that IP address getting removed as well.</p><p>Please note: if the network interface is linked to a IP network, removing the IP address of the NIC will mean that you will lose the IP address concerned.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param ipAddress
     * @param networkInterfaceUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "removeIP", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RemoveIP")
    @ResponseWrapper(localName = "removeIPResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RemoveIPResponse")
    public Job removeIP(
        @WebParam(name = "networkInterfaceUUID", targetNamespace = "")
        String networkInterfaceUUID,
        @WebParam(name = "ipAddress", targetNamespace = "")
        String ipAddress,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a virtual data centre.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param skeletonVDC
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createVDC", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateVDC")
    @ResponseWrapper(localName = "createVDCResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateVDCResponse")
    public Job createVDC(
        @WebParam(name = "skeletonVDC", targetNamespace = "")
        Vdc skeletonVDC,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify virtual data centre.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyVDC", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyVDC")
    @ResponseWrapper(localName = "modifyVDCResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyVDCResponse")
    public Job modifyVDC(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Vdc updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create an image from a server or disk.</p><p>Whether a server or disk can be used depends on the capabilities of the cluster concerned.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not created.</p>
     * 
     * @param skeletonImage
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createImage", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateImage")
    @ResponseWrapper(localName = "createImageResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateImageResponse")
    public Job createImage(
        @WebParam(name = "skeletonImage", targetNamespace = "")
        Image skeletonImage,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify an image.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyImage", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyImage")
    @ResponseWrapper(localName = "modifyImageResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyImageResponse")
    public Job modifyImage(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Image updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify a firewall.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyFirewall", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyFirewall")
    @ResponseWrapper(localName = "modifyFirewallResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyFirewallResponse")
    public Job modifyFirewall(
        @WebParam(name = "updatedResource", targetNamespace = "")
        Firewall updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will cancel a job.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the job is not cancelled.</p>
     * 
     * @param jobUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "cancelJob", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CancelJob")
    @ResponseWrapper(localName = "cancelJobResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CancelJobResponse")
    public Job cancelJob(
        @WebParam(name = "JobUUID", targetNamespace = "")
        String jobUUID)
        throws ExtilityException
    ;

    /**
     * <p>This function will wait for a job to complete.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the wait is not completed.</p>
     * 
     * @param noWaitForChildren
     * @param jobUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "waitForJob", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.WaitForJob")
    @ResponseWrapper(localName = "waitForJobResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.WaitForJobResponse")
    public Job waitForJob(
        @WebParam(name = "jobUUID", targetNamespace = "")
        String jobUUID,
        @WebParam(name = "noWaitForChildren", targetNamespace = "")
        boolean noWaitForChildren)
        throws ExtilityException
    ;

    /**
     * <p>This function will return list of available resource types.</p><p>Each of the resource types returned may be used as in a filter passed to listResources.</p><p>On successful execution, a list of resource types will be returned. On an exception, an empty list is returned.</p>
     * 
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.MapHolder
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "resourceTypeMap", targetNamespace = "")
    @RequestWrapper(localName = "getResourceTypes", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetResourceTypes")
    @ResponseWrapper(localName = "getResourceTypesResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetResourceTypesResponse")
    public MapHolder getResourceTypes()
        throws ExtilityException
    ;

    /**
     * <p>This function will return list of resources after satisfying a filter.</p><p>The resource types can be chosen from the ResourceType enum, the possible values of which are returned by the getResourceTypes call. Where no resource type is given, the resource type defaults to RESOURCE and all resource objects satisfying the filter; the resource objects are returned as simple resource objects in this case. If a specific resource type other than RESOURCE is specified, the objects returned are fully populated.</p><p>On successful execution, a list of resource objects will be returned. On an exception, an empty list is returned.</p>
     * 
     * @param queryLimit
     * @param searchFilter
     * @param resourceType
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "resourcesList", targetNamespace = "")
    @RequestWrapper(localName = "listResources", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResources")
    @ResponseWrapper(localName = "listResourcesResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResourcesResponse")
    public ListResult listResources(
        @WebParam(name = "searchFilter", targetNamespace = "")
        SearchFilter searchFilter,
        @WebParam(name = "queryLimit", targetNamespace = "")
        QueryLimit queryLimit,
        @WebParam(name = "resourceType", targetNamespace = "")
        ResourceType resourceType)
        throws ExtilityException
    ;

    /**
     * <p>This function will update the metadata attached to a resource.</p><p>On successful execution, true is returned. On an exception, the resource is not modified.</p>
     * 
     * @param resourceMetadata
     * @param resourceUUID
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "updateMetadata", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UpdateMetadata")
    @ResponseWrapper(localName = "updateMetadataResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UpdateMetadataResponse")
    public boolean updateMetadata(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "resourceMetadata", targetNamespace = "")
        ResourceMetadata resourceMetadata)
        throws ExtilityException
    ;

    /**
     * <p>This function will list the product purchases matching a given filter.</p><p>On successful execution, a list of product purchases will be returned. On an exception, an empty list is returned.</p>
     * 
     * @param queryLimit
     * @param searchFilter
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "listProductPurchases", targetNamespace = "")
    @RequestWrapper(localName = "listProductPurchases", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListProductPurchases")
    @ResponseWrapper(localName = "listProductPurchasesResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListProductPurchasesResponse")
    public ListResult listProductPurchases(
        @WebParam(name = "searchFilter", targetNamespace = "")
        SearchFilter searchFilter,
        @WebParam(name = "queryLimit", targetNamespace = "")
        QueryLimit queryLimit)
        throws ExtilityException
    ;

    /**
     * <p>This function will list the unit transactions matching a given filter.</p><p>On successful execution, a list of unit transactions will be returned. On an exception, an empty list is returned.</p>
     * 
     * @param queryLimit
     * @param searchFilter
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "listUnitTransaction", targetNamespace = "")
    @RequestWrapper(localName = "listUnitTransactions", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListUnitTransactions")
    @ResponseWrapper(localName = "listUnitTransactionsResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListUnitTransactionsResponse")
    public ListResult listUnitTransactions(
        @WebParam(name = "searchFilter", targetNamespace = "")
        SearchFilter searchFilter,
        @WebParam(name = "queryLimit", targetNamespace = "")
        QueryLimit queryLimit)
        throws ExtilityException
    ;

    /**
     * <p>This function will list the unit transaction summaries matching a given filter.</p><p>On successful execution, a list of unit transaction summaries will be returned. On an exception, an empty list is returned.</p>
     * 
     * @param queryLimit
     * @param searchFilter
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "listUnitTransactionSummary", targetNamespace = "")
    @RequestWrapper(localName = "listUnitTransactionSummary", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListUnitTransactionSummary")
    @ResponseWrapper(localName = "listUnitTransactionSummaryResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListUnitTransactionSummaryResponse")
    public ListResult listUnitTransactionSummary(
        @WebParam(name = "searchFilter", targetNamespace = "")
        SearchFilter searchFilter,
        @WebParam(name = "queryLimit", targetNamespace = "")
        QueryLimit queryLimit)
        throws ExtilityException
    ;

    /**
     * <p>This function will list the statement details matching a given filter.</p><p>On successful execution, a list of statement details will be returned. On an exception, an empty list is returned.</p>
     * 
     * @param queryLimit
     * @param searchFilter
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "listStatementDetail", targetNamespace = "")
    @RequestWrapper(localName = "listStatementDetail", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListStatementDetail")
    @ResponseWrapper(localName = "listStatementDetailResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListStatementDetailResponse")
    public ListResult listStatementDetail(
        @WebParam(name = "searchFilter", targetNamespace = "")
        SearchFilter searchFilter,
        @WebParam(name = "queryLimit", targetNamespace = "")
        QueryLimit queryLimit)
        throws ExtilityException
    ;

    /**
     * <p>This function will revoke the publication of an image to a Customer or Billing Entity.</p>
     * 
     * @param exclude
     * @param imageUUID
     * @param publishTo
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "revokeImage", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RevokeImage")
    @ResponseWrapper(localName = "revokeImageResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RevokeImageResponse")
    public boolean revokeImage(
        @WebParam(name = "imageUUID", targetNamespace = "")
        String imageUUID,
        @WebParam(name = "publishTo", targetNamespace = "")
        String publishTo,
        @WebParam(name = "exclude", targetNamespace = "")
        Boolean exclude)
        throws ExtilityException
    ;

    /**
     * <p>This function will revoke the publication of an image/template to a Customer or Billing Entity.</p>
     * 
     * @param exclude
     * @param resourceUUID
     * @param publishTo
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "revokeResource", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RevokeResource")
    @ResponseWrapper(localName = "revokeResourceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RevokeResourceResponse")
    public boolean revokeResource(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "publishTo", targetNamespace = "")
        String publishTo,
        @WebParam(name = "exclude", targetNamespace = "")
        Boolean exclude)
        throws ExtilityException
    ;

    /**
     * <p>This function will clone a snapshot resource.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not cloned.</p>
     * 
     * @param snapshotUUID
     * @param locationUUID
     * @param name
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "cloneResource", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CloneResource")
    @ResponseWrapper(localName = "cloneResourceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CloneResourceResponse")
    public Job cloneResource(
        @WebParam(name = "snapshotUUID", targetNamespace = "")
        String snapshotUUID,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "locationUUID", targetNamespace = "")
        String locationUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will query the database, aggregating and grouping results if relevant.</p><p>Queries may only be made on a particular resource type; resource type for this purposes includes pseudo-resources such as unit transactions, unit transaction summaries, products, and product purchases. The call takes a Query object which specifies the query to be made, and returns a QueryResult object. See the documentation for the Query and QueryResult objects for more details.</p><p>On successful execution, a QueryResult will be returned. On an exception, the no QueryResult is returned.</p>
     * 
     * @param query
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.QueryResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "queryResult", targetNamespace = "")
    @RequestWrapper(localName = "doQuery", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DoQuery")
    @ResponseWrapper(localName = "doQueryResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DoQueryResponse")
    public QueryResult doQuery(
        @WebParam(name = "query", targetNamespace = "")
        Query query)
        throws ExtilityException
    ;

    /**
     * <p>This function will return a list of measured values close to a given time stamp.</p><p>One measured value is returned per measure key specified in measureKeys, or if an empty array is passed one measured values of each type available is returned. Each measured value will be the latest measured value with a measurement timestamp at or before the timestamp passed, i.e. the timestamp of the measured value returned is guaranteed to have the largest timestamp available which is less than or equal to the timestamp passed. If the timestamp is not specified (timestamp &lt;= 0), the current time will be used as the timestamp. Note that as measured values are measured asynchronously, the timestamp of each measured value returned is likely to differ.</p><p>To return a series of more than one measured value with the same measure key, use doQuery.</p><p>On successful execution, a list of measured values which matches the requested list or if no list is passed a list of all measured values will be returned; in each case, there will only be one measured value with each measure key. On error, an exception will be thrown and no MeasuredValues will be returned.</p>
     * 
     * @param measureKeys
     * @param resourceUUID
     * @param timestamp
     * @return
     *     returns java.util.List<at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.MeasuredValue>
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "measuredValues", targetNamespace = "")
    @RequestWrapper(localName = "getMeasuredValues", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetMeasuredValues")
    @ResponseWrapper(localName = "getMeasuredValuesResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetMeasuredValuesResponse")
    public List<MeasuredValue> getMeasuredValues(
        @WebParam(name = "measureKeys", targetNamespace = "")
        List<String> measureKeys,
        @WebParam(name = "resourceUUID", targetNamespace = "")
        List<String> resourceUUID,
        @WebParam(name = "timestamp", targetNamespace = "")
        long timestamp)
        throws ExtilityException
    ;

    /**
     * <p>This function returns the hypervisor specific settings for a cluster</p>
     * 
     * @param clusterUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.MapHolder
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "hypervisorConfig", targetNamespace = "")
    @RequestWrapper(localName = "getHypervisorConfig", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetHypervisorConfig")
    @ResponseWrapper(localName = "getHypervisorConfigResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetHypervisorConfigResponse")
    public MapHolder getHypervisorConfig(
        @WebParam(name = "clusterUUID", targetNamespace = "")
        String clusterUUID)
        throws ExtilityException
    ;

    /**
     * <p>This function will set the capabilities for the specified group or user on a specific resource.</p><p>All existing permissions are cleared. This call may be used to remove permissions by passing an empty list of permissions, or a copy of the existing list with one or more permissions removed.</p>
     * 
     * @param permissions
     * @param resourceUUID
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "setPermissions", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.SetPermissions")
    @ResponseWrapper(localName = "setPermissionsResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.SetPermissionsResponse")
    public boolean setPermissions(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "permissions", targetNamespace = "")
        List<Permission> permissions)
        throws ExtilityException
    ;

    /**
     * <p>This function will fetch an array of permissions matching the specified filter conditions.</p>
     * 
     * @param queryLimit
     * @param searchFilter
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "permissions", targetNamespace = "")
    @RequestWrapper(localName = "listPermissions", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListPermissions")
    @ResponseWrapper(localName = "listPermissionsResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListPermissionsResponse")
    public ListResult listPermissions(
        @WebParam(name = "searchFilter", targetNamespace = "")
        SearchFilter searchFilter,
        @WebParam(name = "queryLimit", targetNamespace = "")
        QueryLimit queryLimit)
        throws ExtilityException
    ;

    /**
     * <p>This function will determine whether a specified action on a resource would be permitted.</p>
     * 
     * @param permission
     * @param resourceUUID
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "permitted", targetNamespace = "")
    @RequestWrapper(localName = "isPermitted", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.IsPermitted")
    @ResponseWrapper(localName = "isPermittedResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.IsPermittedResponse")
    public boolean isPermitted(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "permission", targetNamespace = "")
        Permission permission)
        throws ExtilityException
    ;

    /**
     * <p>This function adds a user to the specified group.</p>
     * 
     * @param groupUUID
     * @param userUUID
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "addUserToGroup", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AddUserToGroup")
    @ResponseWrapper(localName = "addUserToGroupResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.AddUserToGroupResponse")
    public boolean addUserToGroup(
        @WebParam(name = "userUUID", targetNamespace = "")
        String userUUID,
        @WebParam(name = "groupUUID", targetNamespace = "")
        String groupUUID)
        throws ExtilityException
    ;

    /**
     * <p>This function will remove a user from the specified group, or all groups if the group UUID is null.</p>
     * 
     * @param groupUUID
     * @param userUUID
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "deleteUserFromGroup", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeleteUserFromGroup")
    @ResponseWrapper(localName = "deleteUserFromGroupResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeleteUserFromGroupResponse")
    public boolean deleteUserFromGroup(
        @WebParam(name = "userUUID", targetNamespace = "")
        String userUUID,
        @WebParam(name = "groupUUID", targetNamespace = "")
        String groupUUID)
        throws ExtilityException
    ;

    /**
     * <p>This function will move a user into the Locked group.</p>
     * 
     * @param userUUID
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "lockUser", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.LockUser")
    @ResponseWrapper(localName = "lockUserResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.LockUserResponse")
    public boolean lockUser(
        @WebParam(name = "userUUID", targetNamespace = "")
        String userUUID)
        throws ExtilityException
    ;

    /**
     * <p>This function will remove a user from the Locked group.</p>
     * 
     * @param userUUID
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "unlockUser", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UnlockUser")
    @ResponseWrapper(localName = "unlockUserResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UnlockUserResponse")
    public boolean unlockUser(
        @WebParam(name = "userUUID", targetNamespace = "")
        String userUUID)
        throws ExtilityException
    ;

    /**
     * <p>This function will update a user's details and returns the updated user.</p><p>See createUser for comments on plaintext and hashed passwords.</p>
     * 
     * @param password
     * @param userDetails
     * @param passwordHash
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UserDetails
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "user", targetNamespace = "")
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UpdateUserResponse")
    public UserDetails updateUser(
        @WebParam(name = "userDetails", targetNamespace = "")
        UserDetails userDetails,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "passwordHash", targetNamespace = "")
        String passwordHash)
        throws ExtilityException
    ;

    /**
     * <p>This function will publish an image to a Customer or a Billing Entity.</p>
     * 
     * @param exclude
     * @param imageUUID
     * @param publishTo
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "publishImage", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PublishImage")
    @ResponseWrapper(localName = "publishImageResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PublishImageResponse")
    public boolean publishImage(
        @WebParam(name = "imageUUID", targetNamespace = "")
        String imageUUID,
        @WebParam(name = "publishTo", targetNamespace = "")
        String publishTo,
        @WebParam(name = "exclude", targetNamespace = "")
        Boolean exclude)
        throws ExtilityException
    ;

    /**
     * <p>This function will publish an image to a Customer or a Billing Entity.</p>
     * 
     * @param exclude
     * @param resourceUUID
     * @param publishTo
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "publishResource", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PublishResource")
    @ResponseWrapper(localName = "publishResourceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PublishResourceResponse")
    public boolean publishResource(
        @WebParam(name = "resourceUUID", targetNamespace = "")
        String resourceUUID,
        @WebParam(name = "publishTo", targetNamespace = "")
        String publishTo,
        @WebParam(name = "exclude", targetNamespace = "")
        Boolean exclude)
        throws ExtilityException
    ;

    /**
     * <p>This function will update an existing customer using the supplied fields and return the updated customer object.</p><p>On an exception, the customer object is not updated and no customer object is returned.</p>
     * 
     * @param customerDetails
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CustomerDetails
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "customer", targetNamespace = "")
    @RequestWrapper(localName = "updateCustomer", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UpdateCustomer")
    @ResponseWrapper(localName = "updateCustomerResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.UpdateCustomerResponse")
    public CustomerDetails updateCustomer(
        @WebParam(name = "customerDetails", targetNamespace = "")
        CustomerDetails customerDetails)
        throws ExtilityException
    ;

    /**
     * <p>This function will return list of referral promocodes which meets the filter criteria.</p> 
     * 
     * @param queryLimit
     * @param searchFilter
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "listReferralPromoCode", targetNamespace = "")
    @RequestWrapper(localName = "listReferralPromoCode", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListReferralPromoCode")
    @ResponseWrapper(localName = "listReferralPromoCodeResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ListReferralPromoCodeResponse")
    public ListResult listReferralPromoCode(
        @WebParam(name = "searchFilter", targetNamespace = "")
        SearchFilter searchFilter,
        @WebParam(name = "queryLimit", targetNamespace = "")
        QueryLimit queryLimit)
        throws ExtilityException
    ;

    /**
     * <p>This function will remove the given referral promo code.</p><p>On an exception, the referral promo code is not deleted.</p>
     * 
     * @param promoCode
     * @return
     *     returns boolean
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "deleteReferralPromoCode", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeleteReferralPromoCode")
    @ResponseWrapper(localName = "deleteReferralPromoCodeResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeleteReferralPromoCodeResponse")
    public boolean deleteReferralPromoCode(
        @WebParam(name = "promoCode", targetNamespace = "")
        String promoCode)
        throws ExtilityException
    ;

    /**
     * <p>This function will return a the newly created Referral promocode Object.</p><p>On an exception, the referral promocode is not created.</p> 
     * 
     * @param referralPromoCode
     * @throws ExtilityException
     */
    @WebMethod
    @RequestWrapper(localName = "createReferralPromoCode", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateReferralPromoCode")
    @ResponseWrapper(localName = "createReferralPromoCodeResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateReferralPromoCodeResponse")
    public void createReferralPromoCode(
        @WebParam(name = "referralPromoCode", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<ReferralPromoCode> referralPromoCode)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a deployment template object. On success returns a job</p>
     * 
     * @param skeletonDeploymentTemplate
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createDeploymentTemplate", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateDeploymentTemplate")
    @ResponseWrapper(localName = "createDeploymentTemplateResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateDeploymentTemplateResponse")
    public Job createDeploymentTemplate(
        @WebParam(name = "skeletonDeploymentTemplate", targetNamespace = "")
        DeploymentTemplate skeletonDeploymentTemplate,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will do a dry run on the deployment instance to check if template can be deployed.</p><p>This function will return list of suggested references which can be used when optional references are not found.</p>
     * 
     * @param skeletonDeploymentInstance
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DryRunResult
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "dryRunResult", targetNamespace = "")
    @RequestWrapper(localName = "dryRunTemplate", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DryRunTemplate")
    @ResponseWrapper(localName = "dryRunTemplateResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DryRunTemplateResponse")
    public DryRunResult dryRunTemplate(
        @WebParam(name = "skeletonDeploymentInstance", targetNamespace = "")
        DeploymentInstance skeletonDeploymentInstance,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will deploy a template object.</p>
     * 
     * @param skeletonDeploymentInstance
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "deployTemplate", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeployTemplate")
    @ResponseWrapper(localName = "deployTemplateResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.DeployTemplateResponse")
    public Job deployTemplate(
        @WebParam(name = "skeletonDeploymentInstance", targetNamespace = "")
        DeploymentInstance skeletonDeploymentInstance,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will change the state of (start, stop, kill or reboot) resources in the deployment instance.</p><p>The 'safe' parameter when set will ensure that a clean shutdown is always performed.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param newStatus
     * @param safe
     * @param when
     * @param deploymentInstanceUUID
     * @param runtimeMetadata
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "changeDeploymentInstanceStatus", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ChangeDeploymentInstanceStatus")
    @ResponseWrapper(localName = "changeDeploymentInstanceStatusResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ChangeDeploymentInstanceStatusResponse")
    public Job changeDeploymentInstanceStatus(
        @WebParam(name = "deploymentInstanceUUID", targetNamespace = "")
        String deploymentInstanceUUID,
        @WebParam(name = "newStatus", targetNamespace = "")
        DeploymentInstanceStatus newStatus,
        @WebParam(name = "safe", targetNamespace = "")
        boolean safe,
        @WebParam(name = "runtimeMetadata", targetNamespace = "")
        ResourceMetadata runtimeMetadata,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify deployment template.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyDeploymentTemplate", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyDeploymentTemplate")
    @ResponseWrapper(localName = "modifyDeploymentTemplateResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyDeploymentTemplateResponse")
    public Job modifyDeploymentTemplate(
        @WebParam(name = "updatedResource", targetNamespace = "")
        DeploymentTemplate updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will modify deployment instance.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the resource is not modified.</p>
     * 
     * @param updatedResource
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "modifyDeploymentInstance", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyDeploymentInstance")
    @ResponseWrapper(localName = "modifyDeploymentInstanceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ModifyDeploymentInstanceResponse")
    public Job modifyDeploymentInstance(
        @WebParam(name = "updatedResource", targetNamespace = "")
        DeploymentInstance updatedResource,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create deployment template from deployment instance.</p><p>The call may be scheduled for a future date by setting the 'when' parameter.</p><p>On successful execution, a Job object will be returned. On an exception, the template is not created.</p>
     * 
     * @param instanceUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createDeploymentTemplateFromInstance", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateDeploymentTemplateFromInstance")
    @ResponseWrapper(localName = "createDeploymentTemplateFromInstanceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateDeploymentTemplateFromInstanceResponse")
    public Job createDeploymentTemplateFromInstance(
        @WebParam(name = "instanceUUID", targetNamespace = "")
        String instanceUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will create a blob.</p><p>On successful execution it will return the newly created blob.</p>
     * 
     * @param skeletonBlob
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Blob
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "blob", targetNamespace = "")
    @RequestWrapper(localName = "createBlob", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateBlob")
    @ResponseWrapper(localName = "createBlobResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreateBlobResponse")
    public Blob createBlob(
        @WebParam(name = "skeletonBlob", targetNamespace = "")
        Blob skeletonBlob,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function marks an existing invoice status either pending,paid,unpaid or void.</p><p>On an exception, the invoice is not updated.</p>
     * 
     * @param interactiveInputReturnURL
     * @param invoiceUUID
     * @param allowInteractive
     * @param paymentMethodInstanceUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "payInvoice", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PayInvoice")
    @ResponseWrapper(localName = "payInvoiceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PayInvoiceResponse")
    public Job payInvoice(
        @WebParam(name = "invoiceUUID", targetNamespace = "")
        String invoiceUUID,
        @WebParam(name = "paymentMethodInstanceUUID", targetNamespace = "")
        String paymentMethodInstanceUUID,
        @WebParam(name = "allowInteractive", targetNamespace = "")
        boolean allowInteractive,
        @WebParam(name = "interactiveInputReturnURL", targetNamespace = "")
        String interactiveInputReturnURL,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * Creates a payment method instance
     * 
     * @param interactiveInputReturnURL
     * @param allowInteractive
     * @param paymentMethodInstance
     * @param configuredValues
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "createPaymentMethodInstance", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreatePaymentMethodInstance")
    @ResponseWrapper(localName = "createPaymentMethodInstanceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CreatePaymentMethodInstanceResponse")
    public Job createPaymentMethodInstance(
        @WebParam(name = "paymentMethodInstance", targetNamespace = "")
        PaymentMethodInstance paymentMethodInstance,
        @WebParam(name = "configuredValues", targetNamespace = "")
        List<Value> configuredValues,
        @WebParam(name = "allowInteractive", targetNamespace = "")
        boolean allowInteractive,
        @WebParam(name = "interactiveInputReturnURL", targetNamespace = "")
        String interactiveInputReturnURL,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>Resumes a transaction which was awaiting interactive input.</p><p>The configured values are not passed to this method as any required data should have been stored by Lua in the transaction.</p>
     * 
     * @param transactionUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "resumeTransaction", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ResumeTransaction")
    @ResponseWrapper(localName = "resumeTransactionResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.ResumeTransactionResponse")
    public Job resumeTransaction(
        @WebParam(name = "transactionUUID", targetNamespace = "")
        String transactionUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * Cancels a transaction.
     * 
     * @param transactionUUID
     * @param when
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "cancelTransaction", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CancelTransaction")
    @ResponseWrapper(localName = "cancelTransactionResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.CancelTransactionResponse")
    public Job cancelTransaction(
        @WebParam(name = "transactionUUID", targetNamespace = "")
        String transactionUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * Tests a payment method.
     * 
     * @param when
     * @param paymentMethodUUID
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Job
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "testPaymentMethod", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.TestPaymentMethod")
    @ResponseWrapper(localName = "testPaymentMethodResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.TestPaymentMethodResponse")
    public Job testPaymentMethod(
        @WebParam(name = "paymentMethodUUID", targetNamespace = "")
        String paymentMethodUUID,
        @WebParam(name = "when", targetNamespace = "")
        XMLGregorianCalendar when)
        throws ExtilityException
    ;

    /**
     * <p>This function will purchase the specified number of units using the payment method instance.</p>
     * 
     * @param interactiveInputReturnURL
     * @param dryrun
     * @param paymentMethodInstanceUUID
     * @param productOfferUUID
     * @param units
     * @return
     *     returns at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.Resource
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "job", targetNamespace = "")
    @RequestWrapper(localName = "purchaseUnits", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PurchaseUnits")
    @ResponseWrapper(localName = "purchaseUnitsResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.PurchaseUnitsResponse")
    public Resource purchaseUnits(
        @WebParam(name = "productOfferUUID", targetNamespace = "")
        String productOfferUUID,
        @WebParam(name = "paymentMethodInstanceUUID", targetNamespace = "")
        String paymentMethodInstanceUUID,
        @WebParam(name = "units", targetNamespace = "")
        Double units,
        @WebParam(name = "interactiveInputReturnURL", targetNamespace = "")
        String interactiveInputReturnURL,
        @WebParam(name = "dryrun", targetNamespace = "")
        Boolean dryrun)
        throws ExtilityException
    ;

    /**
     * <p>This function will return Invoice/Credit note PDF in Base64 format</p>
     * 
     * @param invoiceUUID
     * @return
     *     returns java.lang.String
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "invoicePDF", targetNamespace = "")
    @RequestWrapper(localName = "renderInvoice", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RenderInvoice")
    @ResponseWrapper(localName = "renderInvoiceResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.RenderInvoiceResponse")
    public String renderInvoice(
        @WebParam(name = "invoiceUUID", targetNamespace = "")
        String invoiceUUID)
        throws ExtilityException
    ;

    /**
     * <p>This function will return blob content for a given blob</p>
     * 
     * @param blobUUID
     * @return
     *     returns java.lang.String
     * @throws ExtilityException
     */
    @WebMethod
    @WebResult(name = "blobValue", targetNamespace = "")
    @RequestWrapper(localName = "getBlobContent", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetBlobContent")
    @ResponseWrapper(localName = "getBlobContentResponse", targetNamespace = "http://extility.flexiant.net", className = "at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.enforcementPlugins.flexiant.flexConnector.GetBlobContentResponse")
    public String getBlobContent(
        @WebParam(name = "blobUUID", targetNamespace = "")
        String blobUUID)
        throws ExtilityException
    ;

}
